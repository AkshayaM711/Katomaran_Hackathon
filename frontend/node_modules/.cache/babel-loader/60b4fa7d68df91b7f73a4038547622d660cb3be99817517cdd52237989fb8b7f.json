{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Madhu\\\\OneDrive\\\\Desktop\\\\Katomaran_Face_Platform\\\\frontend\\\\src\\\\components\\\\RegisterFace.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from \"react\";\nimport * as faceapi from \"face-api.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LiveRecognition = () => {\n  _s();\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [labeledDescriptors, setLabeledDescriptors] = useState([]);\n  useEffect(() => {\n    const loadModels = async () => {\n      const MODEL_URL = process.env.PUBLIC_URL + \"/models\";\n      await Promise.all([faceapi.nets.ssdMobilenetv1.loadFromUri(MODEL_URL), faceapi.nets.faceLandmark68Net.loadFromUri(MODEL_URL), faceapi.nets.faceRecognitionNet.loadFromUri(MODEL_URL)]);\n      console.log(\"✅ Models loaded\");\n      startCamera();\n      loadLabeledImages();\n    };\n    loadModels();\n  }, []);\n  const startCamera = async () => {\n    const stream = await navigator.mediaDevices.getUserMedia({\n      video: true\n    });\n    videoRef.current.srcObject = stream;\n  };\n  const loadLabeledImages = async () => {\n    const response = await fetch(\"http://localhost:5000/faces\");\n    const images = await response.json();\n    const labeled = await Promise.all(images.map(async imgName => {\n      const label = imgName.split(\".\")[0];\n      const img = await faceapi.fetchImage(`http://localhost:5000/registered_faces/${imgName}`);\n      const detections = await faceapi.detectSingleFace(img).withFaceLandmarks().withFaceDescriptor();\n      if (!detections) return null;\n      return new faceapi.LabeledFaceDescriptors(label, [detections.descriptor]);\n    }));\n    setLabeledDescriptors(labeled.filter(Boolean));\n  };\n  const handlePlay = () => {\n    setInterval(async () => {\n      const canvas = canvasRef.current;\n      const video = videoRef.current;\n      const displaySize = {\n        width: video.videoWidth,\n        height: video.videoHeight\n      };\n      faceapi.matchDimensions(canvas, displaySize);\n      const detections = await faceapi.detectAllFaces(video).withFaceLandmarks().withFaceDescriptors();\n      const resized = faceapi.resizeResults(detections, displaySize);\n      canvas.getContext(\"2d\").clearRect(0, 0, canvas.width, canvas.height);\n      if (labeledDescriptors.length > 0) {\n        const faceMatcher = new faceapi.FaceMatcher(labeledDescriptors, 0.6);\n        const results = resized.map(d => faceMatcher.findBestMatch(d.descriptor));\n        results.forEach((result, i) => {\n          const box = resized[i].detection.box;\n          const drawBox = new faceapi.draw.DrawBox(box, {\n            label: result.toString()\n          });\n          drawBox.draw(canvas);\n        });\n      }\n    }, 200);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl mb-2\",\n      children: \"Live Recognition\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      autoPlay: true,\n      muted: true,\n      width: \"640\",\n      height: \"480\",\n      onPlay: handlePlay,\n      className: \"rounded border\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: \"640\",\n      height: \"480\",\n      style: {\n        position: \"absolute\",\n        top: 0,\n        left: 0\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(LiveRecognition, \"YLOdufJlkTDGP0u3v93fZbWsnmg=\");\n_c = LiveRecognition;\nexport default LiveRecognition;\nvar _c;\n$RefreshReg$(_c, \"LiveRecognition\");","map":{"version":3,"names":["React","useRef","useEffect","useState","faceapi","jsxDEV","_jsxDEV","LiveRecognition","_s","videoRef","canvasRef","labeledDescriptors","setLabeledDescriptors","loadModels","MODEL_URL","process","env","PUBLIC_URL","Promise","all","nets","ssdMobilenetv1","loadFromUri","faceLandmark68Net","faceRecognitionNet","console","log","startCamera","loadLabeledImages","stream","navigator","mediaDevices","getUserMedia","video","current","srcObject","response","fetch","images","json","labeled","map","imgName","label","split","img","fetchImage","detections","detectSingleFace","withFaceLandmarks","withFaceDescriptor","LabeledFaceDescriptors","descriptor","filter","Boolean","handlePlay","setInterval","canvas","displaySize","width","videoWidth","height","videoHeight","matchDimensions","detectAllFaces","withFaceDescriptors","resized","resizeResults","getContext","clearRect","length","faceMatcher","FaceMatcher","results","d","findBestMatch","forEach","result","i","box","detection","drawBox","draw","DrawBox","toString","children","className","fileName","_jsxFileName","lineNumber","columnNumber","ref","autoPlay","muted","onPlay","style","position","top","left","_c","$RefreshReg$"],"sources":["C:/Users/Madhu/OneDrive/Desktop/Katomaran_Face_Platform/frontend/src/components/RegisterFace.jsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\r\nimport * as faceapi from \"face-api.js\";\r\n\r\nconst LiveRecognition = () => {\r\n  const videoRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n  const [labeledDescriptors, setLabeledDescriptors] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const loadModels = async () => {\r\n      const MODEL_URL = process.env.PUBLIC_URL + \"/models\";\r\n      await Promise.all([\r\n        faceapi.nets.ssdMobilenetv1.loadFromUri(MODEL_URL),\r\n        faceapi.nets.faceLandmark68Net.loadFromUri(MODEL_URL),\r\n        faceapi.nets.faceRecognitionNet.loadFromUri(MODEL_URL),\r\n      ]);\r\n      console.log(\"✅ Models loaded\");\r\n      startCamera();\r\n      loadLabeledImages();\r\n    };\r\n\r\n    loadModels();\r\n  }, []);\r\n\r\n  const startCamera = async () => {\r\n    const stream = await navigator.mediaDevices.getUserMedia({ video: true });\r\n    videoRef.current.srcObject = stream;\r\n  };\r\n\r\n  const loadLabeledImages = async () => {\r\n    const response = await fetch(\"http://localhost:5000/faces\");\r\n    const images = await response.json();\r\n\r\n    const labeled = await Promise.all(\r\n      images.map(async (imgName) => {\r\n        const label = imgName.split(\".\")[0];\r\n        const img = await faceapi.fetchImage(`http://localhost:5000/registered_faces/${imgName}`);\r\n        const detections = await faceapi\r\n          .detectSingleFace(img)\r\n          .withFaceLandmarks()\r\n          .withFaceDescriptor();\r\n\r\n        if (!detections) return null;\r\n        return new faceapi.LabeledFaceDescriptors(label, [detections.descriptor]);\r\n      })\r\n    );\r\n\r\n    setLabeledDescriptors(labeled.filter(Boolean));\r\n  };\r\n\r\n  const handlePlay = () => {\r\n    setInterval(async () => {\r\n      const canvas = canvasRef.current;\r\n      const video = videoRef.current;\r\n\r\n      const displaySize = { width: video.videoWidth, height: video.videoHeight };\r\n      faceapi.matchDimensions(canvas, displaySize);\r\n\r\n      const detections = await faceapi\r\n        .detectAllFaces(video)\r\n        .withFaceLandmarks()\r\n        .withFaceDescriptors();\r\n\r\n      const resized = faceapi.resizeResults(detections, displaySize);\r\n\r\n      canvas.getContext(\"2d\").clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n      if (labeledDescriptors.length > 0) {\r\n        const faceMatcher = new faceapi.FaceMatcher(labeledDescriptors, 0.6);\r\n\r\n        const results = resized.map((d) => faceMatcher.findBestMatch(d.descriptor));\r\n\r\n        results.forEach((result, i) => {\r\n          const box = resized[i].detection.box;\r\n          const drawBox = new faceapi.draw.DrawBox(box, { label: result.toString() });\r\n          drawBox.draw(canvas);\r\n        });\r\n      }\r\n    }, 200);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2 className=\"text-xl mb-2\">Live Recognition</h2>\r\n      <video\r\n        ref={videoRef}\r\n        autoPlay\r\n        muted\r\n        width=\"640\"\r\n        height=\"480\"\r\n        onPlay={handlePlay}\r\n        className=\"rounded border\"\r\n      />\r\n      <canvas\r\n        ref={canvasRef}\r\n        width=\"640\"\r\n        height=\"480\"\r\n        style={{ position: \"absolute\", top: 0, left: 0 }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LiveRecognition;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}