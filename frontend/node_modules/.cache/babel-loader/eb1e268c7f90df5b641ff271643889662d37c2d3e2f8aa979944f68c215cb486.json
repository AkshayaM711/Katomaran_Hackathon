{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Madhu\\\\OneDrive\\\\Desktop\\\\Katomaran_Face_Platform\\\\frontend\\\\src\\\\components\\\\LiveCam.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from \"react\";\nimport * as faceapi from \"face-api.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LiveCam = () => {\n  _s();\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [labeledDescriptors, setLabeledDescriptors] = useState([]);\n  useEffect(() => {\n    const init = async () => {\n      const MODEL_URL = process.env.PUBLIC_URL + \"/models\";\n      await Promise.all([faceapi.nets.ssdMobilenetv1.loadFromUri(MODEL_URL), faceapi.nets.faceLandmark68Net.loadFromUri(MODEL_URL), faceapi.nets.faceRecognitionNet.loadFromUri(MODEL_URL)]);\n      console.log(\"✅ FaceAPI models loaded\");\n      await loadLabeledImages();\n      await startVideo();\n    };\n    init();\n  }, []);\n  const loadLabeledImages = async () => {\n    try {\n      const response = await fetch(\"http://localhost:5000/faces\");\n      const imageFiles = await response.json(); // expects [\"John.png\", \"Akshaya.png\", ...]\n\n      const descriptors = await Promise.all(imageFiles.map(async filename => {\n        const label = filename.split(\".\")[0];\n        const imgUrl = `http://localhost:5000/registered_faces/${filename}`;\n        const img = await faceapi.fetchImage(imgUrl);\n        const detection = await faceapi.detectSingleFace(img).withFaceLandmarks().withFaceDescriptor();\n        if (!detection) return null;\n        return new faceapi.LabeledFaceDescriptors(label, [detection.descriptor]);\n      }));\n      setLabeledDescriptors(descriptors.filter(Boolean));\n      console.log(\"✅ Loaded labeled descriptors\");\n    } catch (error) {\n      console.error(\"❌ Failed to load labeled images:\", error);\n    }\n  };\n  const startVideo = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: true\n      });\n      videoRef.current.srcObject = stream;\n      videoRef.current.onloadedmetadata = () => {\n        videoRef.current.play();\n        recognizeFaces();\n      };\n    } catch (error) {\n      console.error(\"❌ Could not start video:\", error);\n    }\n  };\n  const recognizeFaces = () => {\n    const interval = setInterval(async () => {\n      if (!videoRef.current || !canvasRef.current || labeledDescriptors.length === 0) return;\n      const video = videoRef.current;\n      const canvas = canvasRef.current;\n      const displaySize = {\n        width: video.videoWidth,\n        height: video.videoHeight\n      };\n      faceapi.matchDimensions(canvas, displaySize);\n      const detections = await faceapi.detectAllFaces(video).withFaceLandmarks().withFaceDescriptors();\n      const resizedDetections = faceapi.resizeResults(detections, displaySize);\n      canvas.getContext(\"2d\").clearRect(0, 0, canvas.width, canvas.height);\n      const faceMatcher = new faceapi.FaceMatcher(labeledDescriptors, 0.6);\n      const results = resizedDetections.map(d => faceMatcher.findBestMatch(d.descriptor));\n      results.forEach((result, i) => {\n        const box = resizedDetections[i].detection.box;\n        const drawBox = new faceapi.draw.DrawBox(box, {\n          label: result.toString()\n        });\n        drawBox.draw(canvas);\n      });\n    }, 200);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl mb-2\",\n      children: \"Live Face Recognition\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative inline-block\",\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        ref: videoRef,\n        width: \"640\",\n        height: \"480\",\n        autoPlay: true,\n        muted: true,\n        className: \"rounded border\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        width: \"640\",\n        height: \"480\",\n        className: \"absolute top-0 left-0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n};\n_s(LiveCam, \"YLOdufJlkTDGP0u3v93fZbWsnmg=\");\n_c = LiveCam;\nexport default LiveCam;\nvar _c;\n$RefreshReg$(_c, \"LiveCam\");","map":{"version":3,"names":["React","useRef","useEffect","useState","faceapi","jsxDEV","_jsxDEV","LiveCam","_s","videoRef","canvasRef","labeledDescriptors","setLabeledDescriptors","init","MODEL_URL","process","env","PUBLIC_URL","Promise","all","nets","ssdMobilenetv1","loadFromUri","faceLandmark68Net","faceRecognitionNet","console","log","loadLabeledImages","startVideo","response","fetch","imageFiles","json","descriptors","map","filename","label","split","imgUrl","img","fetchImage","detection","detectSingleFace","withFaceLandmarks","withFaceDescriptor","LabeledFaceDescriptors","descriptor","filter","Boolean","error","stream","navigator","mediaDevices","getUserMedia","video","current","srcObject","onloadedmetadata","play","recognizeFaces","interval","setInterval","length","canvas","displaySize","width","videoWidth","height","videoHeight","matchDimensions","detections","detectAllFaces","withFaceDescriptors","resizedDetections","resizeResults","getContext","clearRect","faceMatcher","FaceMatcher","results","d","findBestMatch","forEach","result","i","box","drawBox","draw","DrawBox","toString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","autoPlay","muted","_c","$RefreshReg$"],"sources":["C:/Users/Madhu/OneDrive/Desktop/Katomaran_Face_Platform/frontend/src/components/LiveCam.jsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\r\nimport * as faceapi from \"face-api.js\";\r\n\r\nconst LiveCam = () => {\r\n  const videoRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n  const [labeledDescriptors, setLabeledDescriptors] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const init = async () => {\r\n      const MODEL_URL = process.env.PUBLIC_URL + \"/models\";\r\n\r\n      await Promise.all([\r\n        faceapi.nets.ssdMobilenetv1.loadFromUri(MODEL_URL),\r\n        faceapi.nets.faceLandmark68Net.loadFromUri(MODEL_URL),\r\n        faceapi.nets.faceRecognitionNet.loadFromUri(MODEL_URL),\r\n      ]);\r\n\r\n      console.log(\"✅ FaceAPI models loaded\");\r\n\r\n      await loadLabeledImages();\r\n      await startVideo();\r\n    };\r\n\r\n    init();\r\n  }, []);\r\n\r\n  const loadLabeledImages = async () => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/faces\");\r\n      const imageFiles = await response.json(); // expects [\"John.png\", \"Akshaya.png\", ...]\r\n\r\n      const descriptors = await Promise.all(\r\n        imageFiles.map(async (filename) => {\r\n          const label = filename.split(\".\")[0];\r\n          const imgUrl = `http://localhost:5000/registered_faces/${filename}`;\r\n          const img = await faceapi.fetchImage(imgUrl);\r\n\r\n          const detection = await faceapi\r\n            .detectSingleFace(img)\r\n            .withFaceLandmarks()\r\n            .withFaceDescriptor();\r\n\r\n          if (!detection) return null;\r\n\r\n          return new faceapi.LabeledFaceDescriptors(label, [detection.descriptor]);\r\n        })\r\n      );\r\n\r\n      setLabeledDescriptors(descriptors.filter(Boolean));\r\n      console.log(\"✅ Loaded labeled descriptors\");\r\n    } catch (error) {\r\n      console.error(\"❌ Failed to load labeled images:\", error);\r\n    }\r\n  };\r\n\r\n  const startVideo = async () => {\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia({ video: true });\r\n      videoRef.current.srcObject = stream;\r\n\r\n      videoRef.current.onloadedmetadata = () => {\r\n        videoRef.current.play();\r\n        recognizeFaces();\r\n      };\r\n    } catch (error) {\r\n      console.error(\"❌ Could not start video:\", error);\r\n    }\r\n  };\r\n\r\n  const recognizeFaces = () => {\r\n    const interval = setInterval(async () => {\r\n      if (\r\n        !videoRef.current ||\r\n        !canvasRef.current ||\r\n        labeledDescriptors.length === 0\r\n      ) return;\r\n\r\n      const video = videoRef.current;\r\n      const canvas = canvasRef.current;\r\n\r\n      const displaySize = {\r\n        width: video.videoWidth,\r\n        height: video.videoHeight,\r\n      };\r\n\r\n      faceapi.matchDimensions(canvas, displaySize);\r\n\r\n      const detections = await faceapi\r\n        .detectAllFaces(video)\r\n        .withFaceLandmarks()\r\n        .withFaceDescriptors();\r\n\r\n      const resizedDetections = faceapi.resizeResults(detections, displaySize);\r\n\r\n      canvas.getContext(\"2d\").clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n      const faceMatcher = new faceapi.FaceMatcher(labeledDescriptors, 0.6);\r\n      const results = resizedDetections.map((d) =>\r\n        faceMatcher.findBestMatch(d.descriptor)\r\n      );\r\n\r\n      results.forEach((result, i) => {\r\n        const box = resizedDetections[i].detection.box;\r\n        const drawBox = new faceapi.draw.DrawBox(box, { label: result.toString() });\r\n        drawBox.draw(canvas);\r\n      });\r\n    }, 200);\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-4\">\r\n      <h2 className=\"text-xl mb-2\">Live Face Recognition</h2>\r\n      <div className=\"relative inline-block\">\r\n        <video\r\n          ref={videoRef}\r\n          width=\"640\"\r\n          height=\"480\"\r\n          autoPlay\r\n          muted\r\n          className=\"rounded border\"\r\n        />\r\n        <canvas\r\n          ref={canvasRef}\r\n          width=\"640\"\r\n          height=\"480\"\r\n          className=\"absolute top-0 left-0\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LiveCam;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}